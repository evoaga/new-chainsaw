// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: initial_user_providers.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertInitialUserProvider = `-- name: InsertInitialUserProvider :exec

INSERT INTO initial_user_providers (user_id, provider, provider_user_id, first_name, last_name, nickname, avatar_url, location, created_at)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
ON CONFLICT (user_id, provider) DO NOTHING
`

type InsertInitialUserProviderParams struct {
	UserID         int32              `json:"user_id"`
	Provider       string             `json:"provider"`
	ProviderUserID string             `json:"provider_user_id"`
	FirstName      pgtype.Text        `json:"first_name"`
	LastName       pgtype.Text        `json:"last_name"`
	Nickname       pgtype.Text        `json:"nickname"`
	AvatarUrl      pgtype.Text        `json:"avatar_url"`
	Location       pgtype.Text        `json:"location"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
}

// Initial user providers queries
func (q *Queries) InsertInitialUserProvider(ctx context.Context, arg InsertInitialUserProviderParams) error {
	_, err := q.db.Exec(ctx, insertInitialUserProvider,
		arg.UserID,
		arg.Provider,
		arg.ProviderUserID,
		arg.FirstName,
		arg.LastName,
		arg.Nickname,
		arg.AvatarUrl,
		arg.Location,
		arg.CreatedAt,
	)
	return err
}
